blueprint:
  name: RF double button switch - via RFLink
  domain: automation
  author: https://github.com/kritsel
  description: >
    # RF double button switch - via RFLink
    
    This blueprint adds additional control possibilities to your RF (Radio Frequency) double button switch,
    when you have integrated that switch into your HomeAssistant via the RFLink integration.
    
    
    Out-of-the-box, the RFLink integration creates a single HomeAssistant entity to represent each of the buttons of 
    the switch. This allows you to switch ON or OFF those two entities via HomeAssistant dashboards, automations and scripts.
    
    
    This blueprint adds more control possibilities. 
    It allows you to associate independent actions with the ON and OFF side of each button. 
    This essentially turns your RF double button switch 
    - originally meant to control only **two** (sets of) RF receivers like sockets/outlets - 
    into a **four** button switch. With the ON and OFF side of each button able to trigger 
    a completely independent (set of) action(s). So now you can for example also switch ON or OFF Zigbee or Matter 
    controlled devices (like Philips Hue or IKEA lamps) via your RF switch.
    
    ## Prerequisites
    
    * Your RF switch MUST be integrated via the RFLink integration.
    
    * The RFLink configuration must include `fire_event: true` for the HomeAssistant entities that represent
    the buttons.
    See https://www.home-assistant.io/integrations/rflink/ for guidance.
    
    
    ## Examples of RF switches supported by this blueprint
   
    * COCO/KAKU AWST-8802 (https://klikaanklikuit.nl/product/draadloze-dubbele-wandschakelaar)
    
    
    ## Examples of RF remote controls which are expected to work with this blueprint

    * COCO/KAKU AWST-9000 battery powered wall switch (https://klikaanklikuit.nl/product/draadloze-wandschakelaar-enkelvoudig-dubbel-wit)
    
    * COCO/KAKU AGST-8802 battery powered wall switch outside (https://klikaanklikuit.nl/product/draadloze-wandschakelaar-voor-buiten-dubbel)

    
    ## More Info
    
    ℹ️ ClickOnClickOff (KlikAanKlikUit in NL) is a Dutch brand that makes smart home and wireless remote control products.

  # user provided inputs
  input:
    # entities representing the buttons of the RF switch
    left_button_entity:
      name: Left button entity
      description: The entity representing the left button.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false
    right_button_entity:
      name: Right button entity
      description: The entity representing the right button.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false

    # inputs for custom actions
    action_left_button_on:
      name: Left button ON
      description: Action to run on left button ON click
      default: []
      selector:
        action:
    action_left_button_off:
      name: Left button OFF
      description: Action to run on left button OFF click
      default: []
      selector:
        action:
    action_right_button_on:
      name: Right button ON
      description: Action to run on right button ON click
      default: []
      selector:
        action:
    action_right_button_off:
      name: Right button OFF
      description: Action to run on right button OFF click
      default: []
      selector:
        action:

# Automation schema
mode: single
variables:
  # convert input tags to variables, so they can be used in templates
  left_button_entity: !input left_button_entity
  right_button_entity: !input right_button_entity

triggers:
  - trigger: event
    event_type:
      # RFLink fires button_pressed events for switches/lights/binary_sensors
      - button_pressed

conditions:
  # has the event been fired for one of the configured entities?
  - condition: template
    value_template: >-
      {{trigger.event.data.entity_id in [left_button_entity,right_button_entity] }}
  # and does the event contain a valid state?
  - condition: template
    value_template: >-
      {{trigger.event.data.state in ["on", "off"] }}

actions:
  - choose:
      # left button
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == left_button_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_left_button_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_left_button_off
      # right button
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == right_button_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_right_button_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_right_button_off
