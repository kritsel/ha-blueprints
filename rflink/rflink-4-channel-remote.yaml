blueprint:
  name: RF 4-channel remote control - via RFLink
  domain: automation
  author: https://github.com/kritsel
  description: |
    description: >
    # RF 4-channel remote control - via RFLink
    
    This blueprint adds additional control possibilities to your RF (Radio Frequency) multi-channel remote,
    when you have integrated that remote into your HomeAssistant via the RFLink integration.
    
    
    Out-of-the-box, the RFLink integration creates a single HomeAssistant entity to represent each of the remote's channels 
    (plus an additional entity for the group/all channel when your remote supports that).
    This allows you to switch ON or OFF those entities via HomeAssistant dashboards, automations and scripts.
    
    
    This blueprint adds more control possibilities. 
    It allows you to assign independent actions to the ON and OFF button of each channel. 
    This essentially turns your RF multi-channel remote 
    - originally meant to control only **four** (sets of) RF receivers like sockets/outlets - 
    into a **eight** button switch. With the ON and OFF button of each channel able to trigger 
    a completely independent (set of) action(s). So now you can for example also switch ON or OFF Zigbee or Matter 
    controlled devices (like Philips Hue or IKEA lamps) via your RF remote.    

    
    ## Prerequisites
    
    * Your RF remote control MUST be integrated via the RFLink integratiON press.
    
    * The RFLink configuration must include `fire_event: true` for all HomeAssistant entities that represent
    the channels.
    See https://www.home-assistant.io/integrations/rflink/ for guidance.
    
    
    ## Examples of RF remote controls which are expected to work with this blueprint
    * COCO/KAKU APCR-2300R remote (https://klikaanklikuit.nl/product/stekkerschakelaarset-3-stekkers-2300-watt)
      (only has an ALL OFF button, no ALL on)
    
    * COCO/KAKU AYCT-303 remote with wall mount (https://klikaanklikuit.nl/product/afstandsbediening-met-wandplaat)
    
    ## 'All' or 'Group' functions
    The blueprint assumes that your RF remote control also supports an 'All' or 'Group' channel with an associated on and
    OFF buttON press. However, this functionality might not be available on every multi-channel remote control. 
    Some don't have an All/Group feature at all, or only have an OFF button for the 'All' channel and no ON press.
    
    ## More Info
    
    ℹ️ ClickonClickOff (KlikAanKlikUit in NL) is a Dutch brand that makes smart home and wireless remote control products.

  # user provided inputs
  input:
    # entities representing the buttons of the RF switch
    channel_1_entity:
      name: Channel 1 entity
      description: The entity representing channel 1.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false
    channel_2_entity:
      name: Channel 2 entity
      description: The entity representing channel 2.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false
    channel_3_entity:
      name: Channel 3 entity
      description: The entity representing channel 3.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false
    channel_4_entity:
      name: Channel 4 entity
      description: The entity representing channel 4.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false
    channel_all_entity:
      name: All/Group channel entity
      description: The entity representing the All or Group channel.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false

    # inputs for custom actions
    action_channel_1_on:
      name: Channel 1 ON
      description: Action to run on channel 1 ON press.
      default: []
      selector:
        action:
    action_channel_1_off:
      name: Channel 1 OFF
      description: Action to run on channel 1 OFF press.
      default: [ ]
      selector:
        action:
    action_channel_2_on:
      name: Channel 2 ON
      description: Action to run on channel 2 ON press.
      default: []
      selector:
        action:
    action_channel_2_off:
      name: Channel 2 OFF
      description: Action to run on channel 2 OFF press.
      default: [ ]
      selector:
        action:
    action_channel_3_on:
      name: Channel 3 ON
      description: Action to run on channel 3 ON press.
      default: []
      selector:
        action:
    action_channel_3_off:
      name: Channel 3 OFF
      description: Action to run on channel 3 OFF press.
      default: [ ]
      selector:
        action:
    action_channel_4_on:
      name: Channel 4 ON
      description: Action to run on channel 4 ON press.
      default: [ ]
      selector:
        action:
    action_channel_4_off:
      name: Channel 4 OFF
      description: Action to run on channel 4 OFF press.
      default: [ ]
      selector:
        action:
    action_channel_all_on:
      name: All/Group ON
      description: Action to run on All/Group ON press.
      default: [ ]
      selector:
        action:
    action_channel_all_off:
      name: All/Group OFF
      description: Action to run on All/Group OFF press.
      default: [ ]
      selector:
        action:

# Automation schema
mode: single
variables:
  # convert input tags to variables, so they can be used in templates
  channel_1_entity: !input channel_1_entity
  channel_2_entity: !input channel_2_entity
  channel_3_entity: !input channel_3_entity
  channel_4_entity: !input channel_4_entity
  channel_all_entity: !input channel_all_entity

triggers:
  - trigger: event
    event_type:
      # RFLink fires button_pressed events for switches/lights/binary_sensors
      - button_pressed

conditions:
  # has the event been fired for one of the selected entities?
  - condition: template
    value_template: >-
      {{trigger.event.data.entity_id in [channel_1_entity,channel_2_entity,channel_3_entity,channel_4_entity,channel_all_entity] }}
  # and does the event contain a valid state?
  - condition: template
    value_template: >-
      {{trigger.event.data.state in ["on", "off"] }}

actions:
  - choose:
      # channel 1
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == channel_1_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_channel_1_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_channel_1_off
      # channel 2
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == channel_2_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_channel_2_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_channel_2_off
      # channel 3
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == channel_3_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_channel_3_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_channel_3_off
      # channel 4
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == channel_4_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_channel_4_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_channel_4_off
      # all/group channel
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == channel_all_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_channel_all_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_channel_all_off
