blueprint:
  name: RF single button switch - via RFLink
  domain: automation
  author: https://github.com/kritsel
  description: >
    # RF single button switch - via RFLink
    
    This blueprint adds additional control possibilities to your RF (Radio Frequency) single button switch,
    when you have integrated that switch into your HomeAssistant via the RFLink integration.
    
    
    Out-of-the-box, the RFLink integration creates a single HomeAssistant entity to represent the buttons of 
    the switch. This allows you to switch ON or OFF this entity via HomeAssistant dashboards, automations and scripts.
    
    
    This blueprint adds more control possibilities. 
    It allows you to assign independent actions to the ON and OFF side of the button. 
    This essentially turns your RF single button switch 
    - originally meant to control only **one** (set of) RF receiver like sockets/outlets - 
    into a **two** button switch. With the ON and OFF side of each button able to trigger 
    a completely independent (set of) action(s). So now you can for example also switch ON or OFF Zigbee or Matter 
    controlled devices (like Philips Hue or IKEA lamps) via your RF switch.
    
    ## Prerequisites
    
    * Your RF switch MUST be integrated via the RFLink integration.
    
    * The RFLink configuration must include `fire_event: true` for the HomeAssistant entity that represents
    the button.
    See https://www.home-assistant.io/integrations/rflink/ for guidance.
    
    
    ## Examples of RF remote controls which are expected to work with this blueprint
    
    * COCO/KAKU AWST-8800 single wall switch (https://klikaanklikuit.nl/product/draadloze-wandschakelaar)
    
    * COCO/KAKU AWST-9000 single/double wall switch (https://klikaanklikuit.nl/product/draadloze-wandschakelaar-enkelvoudig-dubbel-wit)
    
    * COCO/KAKU AGST-8800 single outside wall switch (https://klikaanklikuit.nl/product/draadloze-wandschakelaar-voor-buiten)
    
    * COCO/KAKU ACST-9900 single push button (https://klikaanklikuit.nl/product/draadloze-drukknop)

    * COCO/KAKU ACCT-510 single channel keyring remote (https://klikaanklikuit.nl/product/afstandsbediening-sleutelhanger)
    
        
    ## More Info
    
    ℹ️ ClickOnClickOff (KlikAanKlikUit in NL) is a Dutch brand that makes smart home and wireless remote control products.

    ℹ️ See this [post on Blueprints Exchange](https://community.home-assistant.io/t/blueprints-for-rf-radio-frequency-devices-integrated-via-rflink/939543) 
    for more blueprints in this RFLink series

    ℹ️ [my blueprints on GitHub] (https://github.com/kritsel/ha-blueprints)

  # user provided inputs
  input:
    # entity representing the button of the RF switch
    button_entity:
      name: Button entity
      description: The entity representing the button.
      default: ''
      selector:
        entity:
          filter:
            - integration: rflink
              domain:
                - light
                - switch
                - binary_sensor
          multiple: false

    # inputs for custom actions
    action_button_on:
      name: Button ON
      description: Action to run on button ON click
      default: []
      selector:
        action:
    action_button_off:
      name: Button OFF
      description: Action to run on button OFF click
      default: []
      selector:
        action:

# Automation schema
mode: single
variables:
  # convert input tags to variables, so they can be used in templates
  button_entity: !input button_entity

triggers:
  - trigger: event
    event_type:
      # RFLink fires button_pressed events for switches/lights/binary_sensors
      - button_pressed

conditions:
  # has the event been fired for the configured selected entity?
  - condition: template
    value_template: >-
      {{trigger.event.data.entity_id in [button_entity] }}
  # and does the event contain a valid state?
  - condition: template
    value_template: >-
      {{trigger.event.data.state in ["on", "off"] }}

actions:
  - choose:
      # button
      - conditions:
          - condition: template
            value_template: >-
              {{trigger.event.data.entity_id == button_entity}}
        sequence:
          - choose:
              # 'on' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "on"}}
                sequence: !input action_button_on
              # 'off' click
              - conditions:
                  - condition: template
                    value_template: >-
                      {{trigger.event.data.state == "off"}}
                sequence: !input action_button_off
